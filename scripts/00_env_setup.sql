CREATE DATABASE RECURSIVE_CTE;
CREATE SCHEMA RECURSIVE_CTE_DATA;
DROP SCHEMA PUBLIC;

-- Create the stage and the file format
create file format RECURSIVE_CTE_DATA.JSON_FF
    type = JSON
    TRIM_SPACE = TRUE
    STRIP_OUTER_ARRAY = TRUE
    comment = 'File Format to help us parse the JSON files in the stage'
;

CREATE STAGE RECURSIVE_CTE_DATA.RECURSIVE_DATA_STAGE 
	DIRECTORY = ( ENABLE = true ) 
    FILE_FORMAT = (FORMAT_NAME = 'JSON_FF')
	COMMENT = 'Stage that will contain the JSON data files for the Recusive Data Examples'
;

-- Create the tables for the demo
create or replace table RECURSIVE_CTE_DATA.VEHICLE_PARTS_W_CYCLES_ARTICLE (
    PART_ID NUMBER -- PK
    , PART_NAME VARCHAR
    , PART_CATEGORY VARCHAR
    , PART_COST NUMBER(38, 2)
    , PART_MANUFACTURING_DURATION NUMBER(38, 2)
    , DEPENDS_ON NUMBER -- FK THAT POINTS TO ANOTHER PART
);


create or replace table RECURSIVE_CTE_DATA.VEHICLE_PARTS_W_CYCLES (
    PART_ID NUMBER -- PK
    , PART_NAME VARCHAR
    , PART_CATEGORY VARCHAR
    , PART_COST NUMBER(38, 2)
    , PART_MANUFACTURING_DURATION NUMBER(38, 2)
    , DEPENDS_ON NUMBER -- FK THAT POINTS TO ANOTHER PART
);

create or replace table RECURSIVE_CTE_DATA.VEHICLE_PARTS_LARGE_DATASET (
    PART_ID NUMBER -- PK
    , PART_NAME VARCHAR
    , PART_CATEGORY VARCHAR
    , PART_COST NUMBER(38, 2)
    , PART_MANUFACTURING_DURATION NUMBER(38, 2)
    , DEPENDS_ON NUMBER -- FK THAT POINTS TO ANOTHER PART
);